NAME
    isoc_ams - Extract or modify Chapter Data of the ISOC AMS (Salesforce) Database.

DESCRIPTION
    This module consists of a Class ISOC_AMS wrapping _ISOC_AMS which subclasses
    the webdriver.<browser> of Selenium. Up to now ownly firefox and chrome
    drivers are implemented and tested.
    
    The ISOC_AMS class provides the following properties:
        members_list:
            a list of Chapter members (according to AMS) with data (and links)
        pending_applicants_list:
            a list of pending appplicants  (according to AMS) for a Chapter
            membership with data (and links)
    these properties are initialized on first access ... and it will take time
    
    The ISOC_AMS class provides the following methods:
        build_members_list:
            to build a list of Chapter members with data (and links)
        build_pending_applicants_list:
            to build a list of pending appplicants for a Chapter membership with data (and links)
        deny_applicants:
            to deny Chapter membership for a list of applicants
        approve_applicants:
            to approve Chapter membership for a list of applicants
        delete_members:
            to revoke Chapter membership for members from the members list
        difference_from_expected:
            to reread AMS and check if all operations were successfull (not ever
            problem can be detected by the methods)
    
    ISOC_AMS will log you in to ISOC.ORG and check your authorization at
    instantiation.
    
    To select a webdriver, an ISOC_AMS_WEBDRIVER environment variable can be used.
    E.g.
        ISOC_AMS_WEBDRIVER=Firefox
    
    Default is Firefox. Only Firefox and Chrome are allowed for now.
    
    Example
    _______
        from isoc_ams import ISOC_AMS
        userid, password = "myuserid", "mysecret"
    
        # this will log you in
        # and instantiate an ISOC_AMS object
        ams = ISOC_AMS(userid, password)
    
        # this will read the list of members,
        # registered as chapters members
        members = ams.members_list
    
        # print the results
        for isoc_id, member in members.items():
            print(isoc_id,
                  member["first name"],
                  member["last name"],
                  member["email"],
                 )
        # select members to be deleted
        deletees = <...>  # various formats are allowed for operation methods
        delete_members(deletees)
    
        # check if all went well
        print(difference_from_expected())

CLASSES
    builtins.object
        ISOC_AMS
    
    class ISOC_AMS(builtins.object)
     |  ISOC_AMS(user: str, password: str, logfile: _io.StringIO | str = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, headless: bool = True)
     |  
     |  Perform admin operations on a Chaper's members list stored in AMS.
     |  
     |  Since it is about web driving the activities on the website are logged
     |  to check what's going on (on the Website)'. Default is logging to
     |  stdout.
     |  
     |  By default all operations run headless. If you want to follow it on
     |  a browser window use headless=False.
     |  
     |  Args
     |  ____
     |      user: username (email) for ISO.ORG login
     |      password: password for ISO.ORG login
     |      logfile: where to write ISOC_AMS log output
     |      headless: run without GUI
     |  
     |  Methods defined here:
     |  
     |  approve_pending_applications(self, approve_list: list | dict | str | int)
     |      Approve pending Members as Chapter members.
     |      
     |      Args
     |      ----
     |          approve_list: list of dict-entrys, or ISOC-IDs, or single entry
     |                        or ISOC-ID
     |      
     |      approves pending members on approve_list as Chapter members
     |  
     |  delete_members(self, delete_list: list | dict | str | int)
     |      Delete Member(s) from AMS-list of Chapter members.
     |      
     |      Args
     |      ----
     |          delete_list: list of dict-entrys, or ISOC-IDs, or single entry
     |                       or ISOC-ID
     |      
     |      deletes delete_list entries from AMS-list of Chapter members
     |  
     |  deny_pending_applications(self, deny_list: list | dict | str | int, reason: str = 'Timeout, did not apply')
     |      Denies pending Members Chapter membership.
     |      
     |      Args
     |      ----
     |          deny_list: list of dict-entrys, or ISOC-IDs, or single entry
     |                     or ISOC-ID
     |          reason: All denied applicants are denied for
     |      
     |      denies Chapter membership for members on deny_list
     |  
     |  difference_from_expected(self) -> dict
     |      Compare intended outcome of operations with real outcome.
     |      
     |      Returns
     |      -------
     |      A dict containing deviations of the inteded outcome:
     |          {
     |              "not deleted from members":
     |                  All entries in AMS-Chapter-Members that were supposed
     |                  to be deleted,
     |              "not approved from pending applicants list":
     |                  All entries in pending applications that were supposed
     |                  to be approved but were not added to the AMS-Chapter-Members
     |              "not removed from pending applicants list":
     |                  All entries in pending applications that should be
     |                  removed - either since approved or since denied
     |          }
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  members_list
     |      Collects data about Chapter members.
     |      
     |      Collects the relevant data about ISOC members
     |      registered as Chapter members in AMS
     |      
     |      Returns
     |      -------
     |          dictionary with the following scheme:
     |              {<ISOC-ID>:
     |                   {"first name": <first name>,
     |                    "last name": <last name>,
     |                    "email": <Email address>',
     |                    "action link": <url of page to edit this entry>
     |                   },
     |                ...
     |               }
     |      
     |      So ISOC-ID is used as key for the entries
     |  
     |  pending_applications_list
     |      Collects data about pending Chapter applicants.
     |      
     |      Collects the relevant data about pending Chapter applicants
     |      registered as pending Chapter applicants in AMS
     |      
     |      Returns
     |      -------
     |          dictionary with the following scheme:
     |              {<ISOC-ID>:
     |                   {"name": <name>,
     |                    "email": <Email address>',
     |                    "action link": <url of page to edit this entry>
     |                   },
     |                ...
     |               }
     |      ---------------------------------------------
     |      So ISOC-ID is used as key for the entries
     |  
     |  ----------------------------------------------------------------------

VERSION
    0.0.1



